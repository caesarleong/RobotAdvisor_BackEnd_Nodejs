<html>
  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=BIG5">
    <title><%= title %></title>

    <link rel='stylesheet' href='/style/css/fund_filter.css' />
    <link rel="stylesheet" href='/style/css/svg.css' />
    <link rel="stylesheet" href='/style/css/style-RP100Blocks.css' />
    <link rel="stylesheet" href="/style/css/style.css" />

    <script src="style/js/jquery.min.js"></script>
    <script src="style/js/skel.min.js"></script>
    <script src="style/js/init.js"></script>
    <script src="http://d3js.org/d3.v3.min.js" charset="utf-8"></script>
    <style>
      fieldset {
        border:0;
        padding:10px;
        margin-bottom:
        10px;background:#EEE;

        border-radius: 8px;
        -moz-border-radius: 8px;
        -webkit-border-radius: 8px;

        background:-webkit-liner-gradient(top,#EEEEEE,#FFFFFF);
        background:linear-gradient(top,#EFEFEF,#FFFFFF);

        box-shadow:3px 3px 10px #666;
        -moz-box-shadow:3px 3px 10px #666;
        -webkit-box-shadow:3px 3px 10px #666;

        position:relative;
        }

      legend {
        padding:5px 10px;
        background-color:#4F709F;
        color:#FFF;

        border-radius:3px;
        -moz-border-radius:3px;
        -webkit-border-radius:3px;

        box-shadow:2px 2px 4px #666;
        -moz-box-shadow:2px 2px 4px #666;
        -webkit-box-shadow:2px 2px 4px #666;

        position:absolute;
        left:10px;top:-11px;
        }

    </style>
  </head>
  <body>
    <div class="indexnav" id="nav2">
        <a href="/">GI home</a>
        <a href="/service_index">資料庫</a>
        <a href="/etf">服務</a>
    </div>
    <div id="header"></div>

    <div id="bodyContent">
      <h2>
        <font color="blue"><%= date %> ETF分佈與百格圖 (<%=selected_type%>)</font>
        <div id='typeArea'></div>
      </h2>
 <!--頁籤＆基金分布圖-->
      <ul class="scifiUI">
          <li>
            <input type="radio" name="tab" id="tab1" checked/>
            <label for="tab1">1M</label>
            <div class="section" style="width: 1200px;">
              <div id="d3_area_1m">
                <h3>
                </h3>
              </div>
              <div id="d3_button_1m"></div>
            </div>
          </li>
          <li>
            <input type="radio" name="tab" id="tab2"/>
            <label for="tab2" color="blue">3M</label>
            <div class="section" style="width: 1200px;">
              <div id="d3_area_3m">

              </div>
              <div id="d3_button_3m"></div>
            </div>
          </li>
          <li>
            <input type="radio" name="tab" id="tab3" />
            <label for="tab3" color="blue">6M</label>
            <div class="section" style="width: 1200px;">
              <div id="d3_area_6m">
                <h3>
                </h3>
              </div>
              <div id="d3_button_6m"></div>
            </div>
          </li>
          <li>
            <input type="radio" name="tab" id="tab4" />
            <label for="tab4" color="blue">1Y</label>
            <div class="section" style="width: 1200px;">
              <div id="d3_area_1y">
                <h3>
                </h3>
              </div>
              <div id="d3_button_1y"></div>
            </div>
          </li>
          <li>
            <input type="radio" name="tab" id="tab5" />
            <label for="tab5" color="blue">2Y</label>
            <div class="section" style="width: 1200px;">
              <div id="d3_area_2y">
                <h3>
                </h3>
              </div>
              <div id="d3_button_2y"></div>
            </div>
          </li>
          <li>
            <input type="radio" name="tab" id="tab6" />
            <label for="tab6" color="blue">3Y</label>
            <div class="section" style="width: 1200px;">
              <div id="d3_area_3y">
                <h3>
                </h3>
              </div>
              <div id="d3_button_3y"></div>
            </div>
          </li>
      </ul>

      <div id="aum_area"><br>
        

        <!--
          <button class="button special" onclick="call_selection_set()" data-show-layer="hw-layer3" role="button">方案選擇</button>
        -->
        <br>
        <!--
          <button class="btn btn-info btn-lg show-layer" data-show-layer="hw-layer2" role="button">moving curve</button>
        <br>
        -->
      </div>
      <br>

<!--彈出式隱藏區塊-->
    <!--AUM管理-->
      <div class="hw-overlay" id="hw-layer">
        <div class="hw-layer-wrap">
          <div id="aum_list_management" style="margin-top:10%;"></div>
          <br>
          <button class="button special hwLayer-cancel">關閉</button>
        </div>
      </div>

    <!--篩選機制管理-->
       <div class="hw-overlay" id="hw-layer2">
        <div class="hw-layer-wrap" style="width: 1000;">
          <div id="selection_area" style="margin-top:10%;">
          <br>
            1m 篩選策略:
            <select id="dataType" style="width: 200px !important;"
            onchange="ChangeStrategy(this.value,20)" >
              <option value="Intersection">交集</option>
              <option value="Union">聯集</option>
            </select><br>
            3m 篩選策略:
            <select id="dataType" style="width: 200px !important;"
            onchange="ChangeStrategy(this.value,65)" >
              <option value="Intersection">交集</option>
              <option value="Union">聯集</option>
            </select><br>
            6m 篩選策略:
            <select id="dataType" style="width: 200px !important;"
            onchange="ChangeStrategy(this.value,130)" >
              <option value="Intersection">交集</option>
              <option value="Union">聯集</option>
            </select><br>
            1y 篩選策略:
            <select id="dataType" style="width: 200px !important;"
            onchange="ChangeStrategy(this.value,260)" >
              <option value="Intersection">交集</option>
              <option value="Union">聯集</option>
            </select><br>
            2y 篩選策略:
            <select id="dataType" style="width: 200px !important;"
            onchange="ChangeStrategy(this.value,520)" >
              <option value="Intersection">交集</option>
              <option value="Union">聯集</option>
            </select><br>
            3y 篩選策略:
            <select id="dataType" style="width: 200px !important;"
            onchange="ChangeStrategy(this.value,780)" >
              <option value="Intersection">交集</option>
              <option value="Union">聯集</option>
            </select>
            <br><br>
          </div>
          <button class="button special hwLayer-cancel">關閉</button>
        </div>
      </div>

    </div>
    <fieldset style="">
    <legend><h3><font color="white">所選區間總覽:</font></h3></legend>
            <h5>
              <div id="selection_1m" class="SelectionBox">1M:<br>none.</div>
              <div id="selection_3m" class="SelectionBox">3M:<br>none.</div>
              <div id="selection_6m" class="SelectionBox">6M:<br>none.</div>
              <div id="selection_1y" class="SelectionBox">1Y:<br>none.</div>
              <div id="selection_2y" class="SelectionBox">2Y:<br>none.</div>
              <div id="selection_3y" class="SelectionBox">3Y:<br>none.</div>
            </h5>
    </fieldset>

  <!--輸出表單-->
      <form id='rankForm' action='/etf_RPfilter_SelectNum' method='post'>
        <input id='Selection' name='Selection' type='text' style='display:none;'/>
      </form>

  </body>
<script type="text/javascript">
      function decodeHtml(html) {
        var txt = document.createElement("textarea");
        txt.innerHTML = html;
        return txt.value;
      }

      function clone(obj) {
        var copy;
        if (null == obj || "object" != typeof obj) return obj;
        if (obj instanceof Date) {
            copy = new Date();
            copy.setTime(obj.getTime());
            return copy;
        }
        if (obj instanceof Array) {
            copy = [];
            for (var i = 0, len = obj.length; i < len; i++) {
                copy[i] = clone(obj[i]);
            }
            return copy;
        }
        if (obj instanceof Object) {
            copy = {};
            for (var attr in obj) {
                if (obj.hasOwnProperty(attr)) copy[attr] = clone(obj[attr]);
            }
            return copy;
        }
        throw new Error("Unable to copy obj! Its type isn't supported.");
      }

      //AUM清單生成
      /*
      *fundlist=array of jsin objects with fund_name
      *aum_add_remove=生成選單的字串
      */
      fundlist = "<%=fundlist%>"
      fundlist = JSON.parse(decodeHtml(fundlist))
      aum_add_remove = "<fieldset><h3>我的指定清單:</h3><br>";
      aum_add_remove += "<select name=\"selectfrom\" id=\"select-from\" multiple size="+fundlist.length+" style=\"width: 400;height: 100;\">"
      aum_add_remove +="</select><br><a href=\"JavaScript:void(0);\" id=\"btn-add\">移除&raquo;&nbsp;</a><br><br>"

      aum_add_remove +="<h3>當日基金總表:</h3><br><select name=\"selectto\" id=\"select-to\" multiple size="+fundlist.length+" style=\"width: 400px;height: 150px;\">"
      for(i in fundlist){
        aum_add_remove +=" <option value="+fundlist[i].name+">["+fundlist[i].name+"]  "+fundlist[i].full_name+"</option>"
      }
      aum_add_remove +="</select><br><a href=\"JavaScript:void(0);\" id=\"btn-remove\"> 加入&raquo;&nbsp;</a></fieldset>"

      document.getElementById("aum_list_management").innerHTML = aum_add_remove;


      
      var resultGrid = [];

      var blocks_1m = [];
      var blocks_3m = [];
      var blocks_6m = [];
      var blocks_1y = [];
      var blocks_2y = [];
      var blocks_3y = [];

      var point_1m = "<%=point_1m%>";
      var point_3m = "<%=point_3m%>";
      var point_6m = "<%=point_6m%>";
      var point_1y = "<%=point_1y%>";
      var point_2y = "<%=point_2y%>";
      var point_3y = "<%=point_3y%>";

      var strategy_1m = "Intersection";
      var strategy_3m = "Intersection";
      var strategy_6m = "Intersection";
      var strategy_1y = "Intersection";
      var strategy_2y = "Intersection";
      var strategy_3y = "Intersection";

      D3_Draw(point_1m,20);
      D3_Draw(point_3m,65);
      D3_Draw(point_6m,130);
      D3_Draw(point_1y,260);
      D3_Draw(point_2y,520);
      D3_Draw(point_3y,780);

      function ChangeStrategy(e,interval){
        if(interval==20)
          strategy_1m=e;
        if(interval==65)
          strategy_3m=e;
        if(interval==130)
          strategy_6m=e;
        if(interval==260)
          strategy_1y=e;
        if(interval==520)
          strategy_2y=e;
        if(interval==780)
          strategy_3y=e;
      }

      function D3_Draw(point, interval){
        var location;
        var location_button;
        if(interval==20){
          location = '[id="d3_area_1m"]';
          location_button = '[id="d3_button_1m"]';
        }
        if(interval==65){
          location = '[id="d3_area_3m"]';
          location_button = '[id="d3_button_3m"]';
        }
        if(interval==130){
          location = '[id="d3_area_6m"]';
          location_button = '[id="d3_button_6m"]';
        }
        if(interval==260){
          location = '[id="d3_area_1y"]';
          location_button = '[id="d3_button_1y"]';
        }
        if(interval==520){
          location = '[id="d3_area_2y"]';
          location_button = '[id="d3_button_2y"]';
        }
        if(interval==780){
          location = '[id="d3_area_3y"]';
          location_button = '[id="d3_button_3y"]';
        }

        function updateSelectedBlocks() {
            var xy = [10, 10, 10, 10, 10, 10, 10, 10, 10, 10];
            var str_1m="1M:<br>";
            var str_3m="3M:<br>";
            var str_6m="6M:<br>";
            var str_1y="1Y:<br>";
            var str_2y="2Y:<br>";
            var str_3y="3Y:<br>";
            for (var key in resultGrid) {
              var counter = 0;
              var x, y;
              var id = parseInt(resultGrid[key].id);
              var temp = id;
              while (temp > 0) {
                temp = temp - xy[counter];
                counter++;
              }
              x = counter;
              y = xy[counter - 1] + temp;

              if(resultGrid[key].interval==65){
                str_3m += "("+x+","+y+")";
              }
              else if(resultGrid[key].interval==130){
                str_6m += "("+x+","+y+")";
              }
              else if(resultGrid[key].interval==260){
                str_1y += "("+x+","+y+")";
              }
              else if(resultGrid[key].interval==20){
                str_1m += "("+x+","+y+")";
              }
              else if(resultGrid[key].interval==520){
                str_2y += "("+x+","+y+")";
              }
              else if(resultGrid[key].interval==780){
                str_3y += "("+x+","+y+")";
              }
            }
            var IndexAry=["selection_1m","selection_3m","selection_6m","selection_1y","selection_2y","selection_3y"];
            var Htmlmsg=[str_1m,str_3m,str_6m,str_1y,str_2y,str_3y];
            for  (i = 0; i < 6; i++) {
              document.getElementById(IndexAry[i]).innerHTML = "";
            }
            for  (i = 0; i < 6; i++) {
              document.getElementById(IndexAry[i]).innerHTML = "<font size=\"0\">"+Htmlmsg[i]+"</font>";
            }
        }

        function selectBlocks(grid) {
          resultGrid.push(grid);
          updateSelectedBlocks();
        }

        var decodeHtmlData = decodeHtml(point);
        var jsonData = JSON.parse(decodeHtmlData);
        var dots = clone(jsonData);
        //範圍優化
        // for (i = 0; i < dots.length; i++) {
        //   if (dots[i].x > 0.1 || dots[i].y < -0.5 || dots[i].y > 0.5) {
        //     dots.splice(i, 1);
        //     i = i - 1;
        //   }
        // }

        var margin = {top: 25, right: -50, bottom: -25, left: 50};
        var maxLat = 450;
        var width = maxLat - margin.left - margin.right;
        var height = maxLat - margin.top - margin.bottom;

        var xScale = d3.scale.linear()
                      .range([0, width]);

        var yScale = d3.scale.linear()
                      .range([height, 0]);

        var xAxis = d3.svg.axis()
                      .scale(xScale)
                      .orient("bottom")
                      .tickFormat(function(d) { return d; });

        var yAxis = d3.svg.axis()
                      .scale(yScale)
                      .orient("left")
                      .tickFormat(function(d) { return d; });

        var svg = d3.select(location).append("svg")
                    .attr("class", "scatter")
                    .attr("width", width + 75)
                    .attr("height", height + 50)
                   .append("g")
                    .attr("transform", "translate(50" + "," + "25)");

        xScale.domain(d3.extent(dots, function(d) { return d.x; })).nice();
        yScale.domain(d3.extent(dots, function(d) { return d.y; })).nice();

        svg.append("g")
          .attr("class", "axis_x")
          .attr("transform", "translate(0," + height + ")")
          .call(xAxis)
          .style("font-size", "12px")
         .append("text")
          .attr("class", "label")
          .attr("x", width)
          .attr("y", -6);

        svg.append("g")
          .attr("class", "axis_y")
          .call(yAxis)
          .style("font-size", "12px")
         .append("text")
          .attr("class", "label")
          .attr("transform", "rotate(-90)")
          .attr("y", 6)
          .attr("dy", ".71em");

        svg.append("text")
          .attr("text-anchor", "middle")
          .attr("transform", "translate(" + margin.bottom + "," + (height + margin.bottom) + ")rotate(-90)")
          .text("LRR")
          .style("font-size", "12px");

        svg.append("text")
          .attr("text-anchor", "middle")
          .attr("transform", "translate(" + margin.top + "," + (height + margin.top) +")")
          .text("SD")
          .style("font-size", "12px");

        svg.selectAll("#dot")
          .data(dots)
         .enter().append("circle")
          .attr("id", function(d) { return "dot_" + d.id; })
          .attr("r", 3.0)
          .attr("cx", function(d) { return xScale(d.x); })
          .attr("cy", function(d) { return yScale(d.y); })
          .style("fill", "darkgray")
          .attr("rank_20", "0")
          .attr("rank_65", "0")
          .attr("rank_130", "0")
          .attr("rank_260", "0")
          .attr("rank_520", "0")
          .attr("rank_780", "0")
          .on("mouseover", handleMouseOver)
          .on("mouseout", handleMouseOut);

        svg.append('line').attr({
          x1: xScale(0),
          y1: yScale(0),
          x2: xScale(99),
          y2: yScale(0)
        }).style({
          stroke: 'red',
          'stroke-width': 2
        });

        function handleMouseOver(d, i) {
            //alert(d3.select(this).style("fill"));
            d3.select(this).attr({
              r: 6.0,
              before: d3.select(this).style("fill")
            });
            d3.select(this).style({
              fill: "purple"
            });

            // Specify where to put label of text
            svg.append("text").attr({
               id: "t_" + d.id,  // Create an id for text so we can select it later for removing on mouseout
                x: function() { return xScale(d.x) - 30; },
                y: function() { return yScale(d.y) - 15; }
            })
            .text(function() {
              return [d.id+"("+Math.floor(d.x*1000)/1000+","+Math.floor(d.y*1000)/1000+")"];  // Value of the text
            });

          }

      function handleMouseOut(d, i) {
            // Use D3 to select element, change color back to normal
            d3.select(this).attr({
              r: 3.0
            });
            d3.select(this).style({
              fill: d3.select(this).attr("before")
            });

            // Select text by id and then remove
            d3.select("#t_" + d.id).remove();  // Remove text location
          }

        dots = clone(jsonData);
        dots.sort(function(a, b) {
          return parseFloat(a.y) - parseFloat(b.y);
        });

        for (i = 0; i < dots.length; i++) {
            dots[i].oy = dots[i].y;
            dots[i].y = i + 1;
        }

        dots.sort(function(a, b) {
            return parseFloat(a.x) - parseFloat(b.x);
        });

        var grids = [];
        var stdGrids = 10, rateGrids = 10;
        var colDots = Math.floor(dots.length / stdGrids);
        var residual = dots.length % stdGrids;

        var colArr = [];
        for (i = 0; i < stdGrids; i++) {
          colArr[i] = colDots;
          if (i < residual) colArr[i] += 1;
        }

        var col = 0;
        grids.push([]);
        for (i = 0; i < dots.length; i++) {
          if (colArr[col] == 0) {
            grids.push([]);
            col++;
          }
          dots[i].ox = dots[i].x;
          dots[i].x = i + 1;
          grids[grids.length - 1].push(clone(dots[i]));
          colArr[col]--;
        }

        for (i in grids) {
          var sqrs = [];
          var rowDots = Math.floor(grids[i].length / rateGrids);
          residual = grids[i].length % rateGrids;

          var rowArr = [];
          for (j = 0; j < rateGrids; j++) {
            rowArr[j] = rowDots;
            if (j < residual) rowArr[j] += 1;
          }

          grids[i].sort(function (a, b) {
            return parseFloat(a.y) - parseFloat(b.y);
          });

          var row = 0;
          sqrs.push([]);
          for (j in grids[i]) {
            if (rowArr[row] == 0) {
              sqrs.push([]);
              row++;
            }
            sqrs[sqrs.length - 1].push(grids[i][j]);
            rowArr[row]--;
          }
          grids[i] = clone(sqrs);
        }

        var xScale_2 = d3.scale.linear()
                       .range([0, width]);

        var yScale_2 = d3.scale.linear()
                       .range([height, 0]);

        var xAxis_2 = d3.svg.axis()
                      .scale(xScale_2)
                      .orient("bottom")
                      .tickFormat(function(d) { return ""; });

        var yAxis_2 = d3.svg.axis()
                      .scale(yScale_2)
                      .orient("left")
                      .tickFormat(function(d) { return ""; });

        var svg_2 = d3.select(location).append("svg")
                    .attr("class", "grid")
                    .attr("width", width + 50)
                    .attr("height", height + 50)
                    .on("click", click)
                   .append("g")
                    .attr("transform", "translate(50" + "," + "25)")

         xScale_2.domain(d3.extent(dots, function(d) {  return d.x; })).nice();
         yScale_2.domain(d3.extent(dots, function(d) {  return d.y; })).nice();

        svg_2.append("g")
            .attr("class", "axis_x").style({'font-size':'6px'})
            .attr("transform", "translate(0," + height + ")");

        svg_2.append("g")
            .attr("class", "axis_y")
            .call(yAxis_2);

        d3.selectAll("text")
          .each(function(d, i){
            d3.select(this).style("font-size","10px");
          });

        svg_2.append("text")
            .attr("text-anchor", "middle")
            .attr("transform", "translate(" + margin.bottom + "," + (height + margin.bottom) + ")rotate(-90)")
            .text("Profit")
            .style("font-size", "12px");

        svg_2.append("text")
            .attr("text-anchor", "middle")
            .attr("transform", "translate(" + margin.top + "," + (height + margin.top) +")")
            .text("Risk")
            .style("font-size", "12px");


        var rects = [];
        var idx = 1;
        for (i in grids) {
          var xMax = 0, xMin = 10000;
          var coord_x = 0, coord_y = 0;
          for (j in grids[i]) {
            grids[i][j].sort(function(a, b) {
              return parseFloat(a.x) - parseFloat(b.x);
            });

            if (xMin > grids[i][j][0].x) {
              xMin = grids[i][j][0].x;
            }

            if (xMax < grids[i][j][grids[i][j].length - 1].x) {
              xMax = grids[i][j][grids[i][j].length - 1].x;
            }
          }

          var yOld = 0, yMax = 0;
          for (j in grids[i]) {
            grids[i][j].sort(function(a, b) {
              return parseFloat(a.y) - parseFloat(b.y);
            });

            if (j != 0) {
              yOld = yMax;
            }

            var yMin = grids[i][j][0].y;
            yMax = grids[i][j][grids[i][j].length - 1].y;
            var rectData = [{x: xMin, y: yMax, id: idx}];
            var rect = svg_2.selectAll("#rect")
                           .data(rectData)
                          .enter().append("rect")
                           .attr("id", function(d) { return "rect_" + d.id; })
                           .attr("x", function(d) { return xScale_2(d.x); })
                           .attr("y", function(d) { return yScale_2(d.y); })
                           .attr("width", function(d) { return xScale_2(xMax) - xScale_2(xMin); })
                           .attr("height", function(d) { return yScale_2(yOld) - yScale_2(yMax); })
                           .style("fill", "none")
                           .attr("active", 0)
                           .style("stroke", "black")

            coord_x = xScale_2((xMin + xMax) / 2)
            if (i == 0) {
              coord_y = yScale_2((yMin + yMax) / 2)
              svg_2.append("text")
                  .attr("text-anchor", "middle")
                  .attr("transform", "translate(" + (margin.bottom / 2) + "," + coord_y + ")")
                  .text(idx);
            }

            rects.push({
                    id: idx,
                    x: xScale_2(xMin),
                    y: yScale_2(yMax),
                    w: xScale_2(xMax) - xScale_2(xMin),
                    h: yScale_2(yOld) - yScale_2(yMax),
                    dots: clone(grids[i][j]),
                    interval: interval
                  });
            idx++;
          }

          svg_2.append("text")
              .attr("text-anchor", "middle")
              .attr("transform", "translate(" + (margin.top + coord_x) + "," + (height + margin.top / 2) +")")
              .text(Math.floor(idx / 10));
        }

        svg_2.selectAll("#dot")
            .data(dots)
           .enter().append("circle")
            .attr("id", function(d) { return "dot_" + d.id; })
            .attr("r", 1.25)
            .attr("cx", function(d) { return xScale_2(d.x); })
            .attr("cy", function(d) { return yScale_2(d.y); })
            .style("fill", "darkgray")
            .attr("rank_20", "0")
            .attr("rank_65", "0")
            .attr("rank_130", "0")
            .attr("rank_260", "0")
            .attr("rank_520", "0")
            .attr("rank_780", "0")

        // svg_2.append('line').attr({
        //   x1: xScale_2(0),
        //   y1: yScale_2(0),
        //   x2: xScale_2(99),
        //   y2: yScale_2(0)
        // }).style({
        //   stroke: 'red',
        //   'stroke-width': 2
        // });

        colours = {0:"darkgray", 20:"gold", 65:"pink", 130:"orange", 260:"LightSkyBlue ", 520:"LightSteelBlue", 780:"tan"};


        function click() {
          var coords = d3.mouse(this);
          if (coords[0] > margin.left && coords[0] < width + margin.left
              && coords[1] > margin.top && coords[1] < height + margin.top) {

            var cx = coords[0] - margin.left;
            var cy = coords[1] - margin.top;
            for (i in rects) {
              console.log(i)
              if (cx > rects[i].x && cx < rects[i].x + rects[i].w
                  && cy > rects[i].y && cy < rects[i].y + rects[i].h) {
                var rect = svg_2.select("#rect_" + rects[i].id);
                if (rect.attr("active") == 1) {
                  var index = resultGrid.indexOf(rects[i]);
                  if (index > -1) {
                    rect.attr("active", 0);
                    rect.style("fill", "none");

                    for (j in rects[i].dots) {
                      var dots = d3.selectAll("#dot_" + rects[i].dots[j].id);
                      dots.attr("rank_" + interval.toString(), 0);
                      dots.each(function(d, i) {
                        var dot = d3.select(this);
                        if (dot.attr("rank_20") == 1) dot.style("fill", colours[20]);
                        else if (dot.attr("rank_65") == 1) dot.style("fill", colours[65]);
                        else if (dot.attr("rank_130") == 1) dot.style("fill", colours[130]);
                        else if (dot.attr("rank_260") == 1) dot.style("fill", colours[260]);
                        else if (dot.attr("rank_520") == 1) dot.style("fill", colours[520]);
                        else if (dot.attr("rank_780") == 1) dot.style("fill", colours[780])
                        else {
                          dot.style("fill", colours[0]);
                          dot.attr("r", "3");
                          dot.style("opacity", 0.75);
                        }
                      });
                    }
                    resultGrid.splice(index, 1);
                    updateSelectedBlocks();
                  } else {
                    console.log("No element!");
                  }
                } else {
                  rect.attr("active", 1);
                  rect.style("fill", colours[interval]);

                  for (j in rects[i].dots) {
                    var dots = d3.selectAll("#dot_" + rects[i].dots[j].id);
                    dots.attr("rank_" + interval.toString(), 1);
                    dots.each(function(d, i) {
                      var dot = d3.select(this);
                      if (dot.attr("rank_20") == 1) dot.style("fill", colours[20]);
                      else if (dot.attr("rank_65") == 1) dot.style("fill", colours[65]);
                      else if (dot.attr("rank_130") == 1) dot.style("fill", colours[130]);
                      else if (dot.attr("rank_260") == 1) dot.style("fill", colours[260]);
                      else if (dot.attr("rank_520") == 1) dot.style("fill", colours[520]);
                      else dot.style("fill", colours[780]);
                    });
                    dots.attr("r", "3");
                    dots.style("opacity", 0.75);
                  }
                  selectBlocks(rects[i]);
                }
                break;
              }
            }
          }
        }

        function auto_click(i,this_interval){
              var rect = svg_2.select("#rect_" + (i+1));
                if (rect.attr("active") == 1) {
                  var index = resultGrid.indexOf(rects[i]);
                  if (index > -1) {
                    rect.attr("active", 0);
                    rect.style("fill", "none");

                    for (j in rects[i].dots) {
                      var dots = d3.selectAll("#dot_" + rects[i].dots[j].id);
                      dots.attr("rank_" + this_interval.toString(), 0);
                      dots.each(function(d, x) {
                        var dot = d3.select(this);
                        if (dot.attr("rank_20") == 1) dot.style("fill", colours[20]);
                        else if (dot.attr("rank_65") == 1) dot.style("fill", colours[65]);
                        else if (dot.attr("rank_130") == 1) dot.style("fill", colours[130]);
                        else if (dot.attr("rank_260") == 1) dot.style("fill", colours[260]);
                        else if (dot.attr("rank_520") == 1) dot.style("fill", colours[520]);
                        else if (dot.attr("rank_780") == 1) dot.style("fill", colours[780])
                        else {
                          dot.style("fill", colours[0]);
                          dot.attr("r", "3");
                          dot.style("opacity", 0.75);
                        }
                      });
                    }
                    resultGrid.splice(index, 1);
                    updateSelectedBlocks();
                  } else {
                    console.log("No element!");
                  }
                } else {
                  rect.attr("active", 1);
                  rect.style("fill", colours[this_interval]);

                  for (j in rects[i].dots) {
                    var dots = d3.selectAll("#dot_" + rects[i].dots[j].id);
                    dots.attr("rank_" + this_interval.toString(), 1);
                    dots.each(function(d, x) {
                      var dot = d3.select(this);
                      if (dot.attr("rank_20") == 1) dot.style("fill", colours[20]);
                      else if (dot.attr("rank_65") == 1) dot.style("fill", colours[65]);
                      else if (dot.attr("rank_130") == 1) dot.style("fill", colours[130]);
                      else if (dot.attr("rank_260") == 1) dot.style("fill", colours[260]);
                      else if (dot.attr("rank_520") == 1) dot.style("fill", colours[520]);
                      else dot.style("fill", colours[780]);
                    });
                    dots.attr("r", "3");
                    dots.style("opacity", 0.75);
                  }
                  selectBlocks(rects[i]);
                }
        }

//Auto Selection Mananger
        if(interval==20){
          $("button#20_h").click(function() {
             var high = [5,6,7,8,9,15,16,17,18,19,25,26,27,28,29,35,36,37,38,39,45,46,47,48,49,55,56,57,58,59,65,66,67,68,69,75,76,77,78,79,85,86,87,88,89,95,96,97,98,99]
             for(var i in high){
              auto_click(high[i],20)
            }
          });

          $("button#20_l").click(function() {
             var low = [0,1,2,3,4,10,11,12,13,14,20,21,22,23,24,30,31,32,33,34,40,41,42,43,44,50,51,52,53,54,60,61,62,63,64,70,71,72,73,74,80,81,82,83,84,90,91,92,93,94]
             for(var i in low){
              auto_click(low[i],20)
            }
          });

          $("button#20_m").click(function() {
             var middle = [3,4,5,13,14,15,23,24,25,33,34,35,43,44,45,53,54,55,63,64,65,73,74,75,83,84,85,93,94,95]
             for(var i in middle){
              auto_click(middle[i],20)
            }
          });
        }

        if(interval==65){
          $("button#65_h").click(function() {
             var high = [5,6,7,8,9,15,16,17,18,19,25,26,27,28,29,35,36,37,38,39,45,46,47,48,49,55,56,57,58,59,65,66,67,68,69,75,76,77,78,79,85,86,87,88,89,95,96,97,98,99]
             for(var i in high){
              auto_click(high[i],65)
            }
          });

          $("button#65_l").click(function() {
             var high = [0,1,2,3,4,10,11,12,13,14,20,21,22,23,24,30,31,32,33,34,40,41,42,43,44,50,51,52,53,54,60,61,62,63,64,70,71,72,73,74,80,81,82,83,84,90,91,92,93,94]
             for(var i in high){
              auto_click(high[i],65)
            }
          });

          $("button#65_m").click(function() {
             var middle = [3,4,5,13,14,15,23,24,25,33,34,35,43,44,45,53,54,55,63,64,65,73,74,75,83,84,85,93,94,95]
             for(var i in middle){
              auto_click(middle[i],65)
            }
          });
        }

        if(interval==130){
          $("button#130_h").click(function() {
             var high = [5,6,7,8,9,15,16,17,18,19,25,26,27,28,29,35,36,37,38,39,45,46,47,48,49,55,56,57,58,59,65,66,67,68,69,75,76,77,78,79,85,86,87,88,89,95,96,97,98,99]
             for(var i in high){
              auto_click(high[i],130)
            }
          });

          $("button#130_l").click(function() {
             var high = [0,1,2,3,4,10,11,12,13,14,20,21,22,23,24,30,31,32,33,34,40,41,42,43,44,50,51,52,53,54,60,61,62,63,64,70,71,72,73,74,80,81,82,83,84,90,91,92,93,94]
             for(var i in high){
              auto_click(high[i],130)
            }
          });

          $("button#130_m").click(function() {
             var middle = [3,4,5,13,14,15,23,24,25,33,34,35,43,44,45,53,54,55,63,64,65,73,74,75,83,84,85,93,94,95]
             for(var i in middle){
              auto_click(middle[i],130)
            }
          });
        }

        if(interval==260){
          $("button#260_h").click(function() {
             var high = [5,6,7,8,9,15,16,17,18,19,25,26,27,28,29,35,36,37,38,39,45,46,47,48,49,55,56,57,58,59,65,66,67,68,69,75,76,77,78,79,85,86,87,88,89,95,96,97,98,99]
             for(var i in high){
              auto_click(high[i],260)
            }
          });

          $("button#260_l").click(function() {
             var high = [0,1,2,3,4,10,11,12,13,14,20,21,22,23,24,30,31,32,33,34,40,41,42,43,44,50,51,52,53,54,60,61,62,63,64,70,71,72,73,74,80,81,82,83,84,90,91,92,93,94]
             for(var i in high){
              auto_click(high[i],260)
            }
          });

          $("button#260_m").click(function() {
             var middle = [3,4,5,13,14,15,23,24,25,33,34,35,43,44,45,53,54,55,63,64,65,73,74,75,83,84,85,93,94,95]
             for(var i in middle){
              auto_click(middle[i],260)
            }
          });
        }

        if(interval==520){
          $("button#520_h").click(function() {
             var high = [5,6,7,8,9,15,16,17,18,19,25,26,27,28,29,35,36,37,38,39,45,46,47,48,49,55,56,57,58,59,65,66,67,68,69,75,76,77,78,79,85,86,87,88,89,95,96,97,98,99]
             for(var i in high){
              auto_click(high[i],520)
            }
          });

          $("button#520_l").click(function() {
             var high = [0,1,2,3,4,10,11,12,13,14,20,21,22,23,24,30,31,32,33,34,40,41,42,43,44,50,51,52,53,54,60,61,62,63,64,70,71,72,73,74,80,81,82,83,84,90,91,92,93,94]
             for(var i in high){
              auto_click(high[i],520)
            }
          });

          $("button#520_m").click(function() {
             var middle = [3,4,5,13,14,15,23,24,25,33,34,35,43,44,45,53,54,55,63,64,65,73,74,75,83,84,85,93,94,95]
             for(var i in middle){
              auto_click(middle[i],520)
            }
          });
        }

        if(interval==780){
          $("button#780_h").click(function() {
             var high = [5,6,7,8,9,15,16,17,18,19,25,26,27,28,29,35,36,37,38,39,45,46,47,48,49,55,56,57,58,59,65,66,67,68,69,75,76,77,78,79,85,86,87,88,89,95,96,97,98,99]
             for(var i in high){
              auto_click(high[i],780)
            }
          });

          $("button#780_l").click(function() {
             var high = [0,1,2,3,4,10,11,12,13,14,20,21,22,23,24,30,31,32,33,34,40,41,42,43,44,50,51,52,53,54,60,61,62,63,64,70,71,72,73,74,80,81,82,83,84,90,91,92,93,94]
             for(var i in high){
              auto_click(high[i],780)
            }
          });

          $("button#780_m").click(function() {
             var middle = [3,4,5,13,14,15,23,24,25,33,34,35,43,44,45,53,54,55,63,64,65,73,74,75,83,84,85,93,94,95]
             for(var i in middle){
              auto_click(middle[i],780)
            }
          });
        }
       
        


        //end of draw
      }

      function submitFilter () {
      }

      $(function(){
          function showLayer(id){
              var layer = $('#'+id),
                  layerwrap = layer.find('.hw-layer-wrap');
              layer.fadeIn();
              layerwrap.css({
                  'margin-top': -layerwrap.outerHeight()/2,
              });
          }

          function hideLayer(){
              $('.hw-overlay').fadeOut();
          }

          $('.hwLayer-ok,.hwLayer-cancel,.hwLayer-close').on('click', function() {
              hideLayer();
          });

          $('.show-layer').on('click',  function() {
              var layerid = $(this).data('show-layer');
              showLayer(layerid);
          });

          $('.hw-overlay').on('click',  function(event) {
              if (event.target == this){
                  hideLayer();
              }
          });

          $(document).keyup(function(event) {
              if (event.keyCode == 27) {
                  hideLayer();
              }
          });
      });

    // AUM add-remove list
    $(document).ready(function() {
      $('#btn-add').click(function(){
          $('#select-from option:selected').each( function() {
                  $('#select-to').append("<option value='"+$(this).val()+"'>"+$(this).text()+"</option>");
              $(this).remove();
          });
          //change_AUM()  0827暫時移除此功能
      });
      $('#btn-remove').click(function(){
          $('#select-to option:selected').each( function() {
              $('#select-from').append("<option value='"+$(this).val()+"'>"+$(this).text()+"</option>");
              $(this).remove();
          });
          //change_AUM()  0827暫時移除此功能
      });

    });
    function change_AUM(){
      var Htmlmsg = ""
      document.getElementById("aum_list").innerHTML = "";
      $("#select-from option").each(function()
      {
        str_stock_list = $(this).text();
        Htmlmsg += str_stock_list+"<br>"
      });
      document.getElementById("aum_list").innerHTML = Htmlmsg;
    }

    function get_final_AUM(){
      var Htmlmsg = ""
      $("#select-from option").each(function()
      {
        str_stock_list = $(this).value();
        Htmlmsg += str_stock_list+" "
      });
      return Htmlmsg
    }
    </script>

</html>
